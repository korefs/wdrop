name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        rid: [osx-64, win-x64]

    env:
      DOTNET_VERSION: '8.0.x'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
        
      - name: Set RID for Linux/macOS
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            echo "RID=linux-x64" >> $GITHUB_ENV
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            arch=$(uname -m)
            if [[ "$arch" == "arm64" ]]; then
              echo "RID=osx-arm64" >> $GITHUB_ENV
            else
              echo "RID=osx-x64" >> $GITHUB_ENV
            fi
          fi

      - name: Set RID for Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          echo "RID=win-x64" >> $env:GITHUB_ENV

      - name: Build project
        run: dotnet publish -c Release -r $RID --self-contained true -o ./publish/wdrop-${{ matrix.os }}

      - name: Zip artifact (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd publish
          zip -r wdrop-${{ matrix.os }}.zip wdrop-${{ matrix.os }}

      - name: Zip artifact (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          $source = "publish/wdrop-${{ matrix.os }}"
          $dest = "publish/wdrop-${{ matrix.os }}.zip"
          Compress-Archive -Path $source/* -DestinationPath $dest

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: wdrop-${{ matrix.os }}
          path: ./publish/wdrop-${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: publish

      - name: Display structure
        run: ls -R publish

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: publish/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}